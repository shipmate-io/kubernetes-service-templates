name: local:html
version: latest
alias: HTML
description: Static HTML service
icon: null
api: v1
form:

  - name: Source code
    description: ~
    questions:
      - name: Path to HTML source code
        description: The directory in your Git repository that contains your static HTML files.
        type: file_path
        variable: path_to_source_code
        value: src/
        questions: []

deployment:

  - type: image
    id: app-service-website-image-html
    name: html
    dockerfile_path: Dockerfile
    file_paths:
      - code-repository/src/**
      - server.conf
      - Dockerfile

  - type: stateless_set
    id: website-stateless-set-html
    name: html
    update_strategy: rolling_update
    containers:
      - id: website-stateless-set-html-container-html
        name: html
        image: app-service-website-image-html
        image_registry_name: null
        command: []
        environment_variables: []
        config_file_mounts: []
        volume_mounts: []
        memory:
          minimum: 32
          maximum: 256
        cpus:
          minimum: 50
          maximum: 500
        liveness_probe: null
        readiness_probe: null

  - type: entrypoint
    id: website-entrypoint-html
    name: html
    alias: HTML service
    description: null
    target:
      type: set_target
      set_type: stateless_set
      set_id: website-stateless-set-html
    port: 8080
    protocol: HTTPS

interfaces:

  - type: logs
    name: NGINX error logs
    source:
      type: stateless_set
      id: website-stateless-set-html

files:

  - path: Dockerfile
    contents: |-
      FROM europe-west3-docker.pkg.dev/smoothy-171414/base-images/nginx/1.19:1.0.2
  
      # Copy the nginx configuration into the image.
      COPY server.conf /etc/nginx/conf.d/server.conf
  
      # Copy the source code of the service into the image.
      COPY code-repository/src/ /usr/share/nginx/html/src/

  - path: server.conf
    contents: |-
      server {
          listen 8080;
          listen [::]:8080 default ipv6only=on;
          server_name _;
  
          root /usr/share/nginx/html/src/;
          index index.html index.htm;
          error_page 404 /404.html;
          charset utf-8;
  
          add_header X-Frame-Options "sameorigin";
          add_header X-XSS-Protection "1; mode=block";
          add_header X-Content-Type-Options "nosniff";
  
          location = /favicon.ico {
              log_not_found off;
          }
  
          location = /robots.txt  {
              log_not_found off;
          }
  
          location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1M;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
          }
  
          location / {
              # if 'path/index.html' is requested, redirect to 'path/'
              if ($request_uri ~ ^/(.*/)?index\.html(.*)?$) {
                  return 301 $scheme://$http_host/$1$is_args$args;
              }
              # if 'path/file.html' is requested, redirect to 'path/file'
              if ($request_uri ~ ^/(.*)\.html(.*)?$) {
                  return 301 $scheme://$http_host/$1$is_args$args;
              }
              # first attempt to serve request as file, then as directory, then throw 404
              try_files $uri.html $uri $uri/ =404;
          }
  
          location ~ /\. {
              log_not_found off;
              deny all;
          }
      }
